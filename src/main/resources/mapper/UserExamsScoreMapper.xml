<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.alan.exam.mapper.UserExamsScoreMapper">

    <!--    根据用户Id列表，考试Id获取该考试的最高分、最低分、平均分、参考人数、及格人数-->
    <select id="scoreStatistics" resultType="cn.org.alan.exam.model.vo.score.GradeScoreVO">
        select max(user_score) as maxScore, min(user_score) as minScore, avg(user_score) as avgScore,
        count(user_score) as attendNum,count(case where user_score >= #{passedScore} then 1 end) as passedNum
        from t_user_exam_score
        where exam_id = #{examId}
        and user_id in
        <foreach collection="userIds" item="userId" separator="," open="(" close=")">
            #{userId}
        </foreach>
    </select>

    <!--    成绩分页查询-->
    <select id="pagingScore" resultType="cn.org.alan.exam.model.vo.score.UserScoreVO">
        select ues.id, e.title, u.real_name, ues.user_time, ues.user_score, ues.limit_time, ues.count
        from t_user_exams_score as ues
        join t_user as u on ues.user_id = u.id
        join t_exam as e on ues.exam_id = e.id
        <trim prefix="where" prefixOverrides="and">
            <if test="id != null">
                u.grade_id = #{id}
            </if>
            <if test="examId != null">
                and ues.exam_id = #{examId}
            </if>
            <if test='realName != null and realName != ""'>
                and u.real_name like concat('%',#{realName},'%')
            </if>
        </trim>
    </select>
    <select id="getNumberOfApplicants" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM t_user_exams_score WHERE state=1 and exam_id= #{exam_id}

    </select>
    <select id="getCorrectedPaper" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM t_user_exams_score WHERE whether_mark=1
    </select>
    <!--查询成绩-->
    <select id="selectScores" resultType="cn.org.alan.exam.model.vo.score.ExportScoreVO">
        select u.real_name, g.grade_name, ues.user_score as score
        from t_user_exams_score as ues
                 join t_user as u on ues.user_id = u.id
                 join t_grade as g on u.grade_id = g.id
        where ues.exam_id = #{examId}
          and g.id = #{gradeId}
        order by ues.user_score desc;
    </select>
</mapper>
